
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users collection:
    // - Any authenticated user can read user profiles (for directories, etc.)
    // - Only admins can create or delete users.
    // - Users can update their own profile, and admins can update any profile.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow update: if request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // DailyLogs collection:
    // - Employees can create their own logs.
    // - Employees can read their own logs.
    // - Admins can read all logs.
    match /dailyLogs/{logId} {
      allow create: if request.auth.uid == request.resource.data.employeeId;
      allow read: if request.auth.uid == resource.data.employeeId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow update, delete: if false; // Logs should be immutable
    }

    // Tasks collection:
    // - Admins can create, read, update, and delete any task.
    // - Employees can read tasks assigned to them.
    // - Employees can update the isCompleted status of their own tasks.
    match /tasks/{taskId} {
      allow read: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' || resource.data.employeeId == request.auth.uid;
      allow create, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' || 
                       (resource.data.employeeId == request.auth.uid && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['isCompleted']));
    }
    
    // Announcements collection:
    // - Any authenticated user can read the latest announcement.
    // - Only admins can create/update the announcement.
    match /announcements/latest {
        allow read: if request.auth != null;
        allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Resources collection:
    // - Authenticated users can read resources.
    // - Admins can write (create, update, delete) resources.
    match /resources/{resourceId} {
      allow read: if request.auth != null;
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // VisitorLogs collection:
    // - Any authenticated employee can create a log for themselves.
    // - Only admins can read the logs.
    match /visitorLogs/{logId} {
        allow create: if request.auth.uid == request.resource.data.employeeId;
        allow read: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
        allow update, delete: if false;
    }

    // FakeEmployees collection:
    // - All authenticated users can read the fake employee list for the dashboard.
    // - Only admins can write (create, update, delete).
    match /fakeEmployees/{employeeId} {
        allow read: if request.auth != null;
        allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Config & TaskFields collections (for dynamic forms):
    // - All authenticated users can read the configuration.
    // - Only admins can write to the configuration.
    match /config/{docId} {
        allow read: if request.auth != null;
        allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    match /taskFields/{fieldId} {
        allow read: if request.auth != null;
        allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}
